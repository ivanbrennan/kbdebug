#!/usr/bin/env bash

set -eu

while (($#)); do
  case $1 in
    -l|--log) logging=1 && shift ;;
    -r|--raw) raw=1     && shift ;;
    -2|--xi2) xi2=1     && shift ;;
    *)
      printf 'Usage: %s [-l|--log] [-2|--xi2]\n' "$0"
      exit 1
      ;;
  esac
done

: ${logging:=0}
: ${raw:=0}
: ${xi2:=0}

SRC=$(readlink -f "$0") # path to this script
DIR=$(dirname "$SRC")
export DIR

if (( logging )); then
  LOGFILE="$DIR/$(basename "$SRC")-$(date +%s).log"
else
  LOGFILE=/dev/null
fi

if (( raw )); then
  CMD=events
else
  CMD=display_keyboard_events
fi

if (( xi2 )); then
  events() {
    xinput test-xi2 --root
  }

  display_keyboard_events() {
    events | perl -ln "$DIR/parse_keysyms.pl"
  }
else
  events() {
    xinput list | \
      grep -oP 'id=\K\d+(?=.*slave\s*keyboard)' | \
      xargs -P0 -n1 xinput test
  }

  display_keyboard_events() {
    events | stdbuf -o0 awk -f "$DIR/parse_keysyms.awk"
  }
fi


export -f events display_keyboard_events

# ensure input echoing is re-enabled on exit
trap 'stty echo' EXIT INT TERM

nix-shell -p xorg.xmodmap --run "
  stty -echo
  $CMD | tee $LOGFILE
"
